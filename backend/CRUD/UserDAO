package Razzvozz;

import org.springframework.stereotype.Repository;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

@Repository
public class UserDAO {

    // Insert (добавить нового пользователя)
    public void insertUser(int userId, String login, String password, boolean isAdmin) throws SQLException {
        String query = "INSERT INTO Users (User_ID, Login, Password, Admin) VALUES (?, ?, ?, ?)";
        try (Connection connection = SSMSConnect.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, userId);
            statement.setString(2, login);
            statement.setString(3, password);
            statement.setBoolean(4, isAdmin);
            statement.executeUpdate();
        }
    }

    // Select all users (получить список всех пользователей)
    public List<User> getAllUsers() throws SQLException {
        List<User> users = new ArrayList<>();
        String query = "SELECT User_ID, Login, Password, Admin FROM Users";
        try (Connection connection = SSMSConnect.getConnection();
             PreparedStatement statement = connection.prepareStatement(query);
             ResultSet resultSet = statement.executeQuery()) {
            while (resultSet.next()) {
                int userId = resultSet.getInt("User_ID");
                String login = resultSet.getString("Login");
                String password = resultSet.getString("Password");
                boolean isAdmin = resultSet.getBoolean("Admin");
                users.add(new User(userId, login, password, isAdmin));
            }
        }
        return users;
    }

    // Select user by ID (получить пользователя по ID)
    public User getUserById(int userId) throws SQLException {
        String query = "SELECT User_ID, Login, Password, Admin FROM Users WHERE User_ID = ?";
        try (Connection connection = SSMSConnect.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, userId);
            try (ResultSet resultSet = statement.executeQuery()) {
                if (resultSet.next()) {
                    String login = resultSet.getString("Login");
                    String password = resultSet.getString("Password");
                    boolean isAdmin = resultSet.getBoolean("Admin");
                    return new User(userId, login, password, isAdmin);
                }
            }
        }
        return null; // Return null if the user is not found
    }

    // Update (обновить данные пользователя)
    public void updateUser(int userId, String login, String password, boolean isAdmin) throws SQLException {
        String query = "UPDATE Users SET Login = ?, Password = ?, Admin = ? WHERE User_ID = ?";
        try (Connection connection = SSMSConnect.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setString(1, login);
            statement.setString(2, password);
            statement.setBoolean(3, isAdmin);
            statement.setInt(4, userId);
            statement.executeUpdate();
        }
    }

    // Delete (удалить пользователя)
    public void deleteUser(int userId) throws SQLException {
        String query = "DELETE FROM Users WHERE User_ID = ?";
        try (Connection connection = SSMSConnect.getConnection();
             PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, userId);
            statement.executeUpdate();
        }
    }
}
